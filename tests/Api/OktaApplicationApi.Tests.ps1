#
# Okta Management
# Allows customers to easily access the Okta Management APIs
# Version: 3.0.0
# Contact: devex-public@okta.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'Okta.PowerShell' -name 'OktaOktaApplicationApi' {
    Context 'New-OktaApplication' {
        It 'Initialize-OktaBasicAuthApplication' {
            # a simple test to create an object
            $Settings = Initialize-OktaBasicApplicationSettings -App @{ Url = "https://example.com/login.html"; AuthURL = "https://example.com/auth.html" }

            $Settings.App.Url | Should -Be "https://example.com/login.html"
            $Settings.App.AuthURL | Should -Be "https://example.com/auth.html"

            $NewObject = Initialize-OktaBasicAuthApplication -Label "New App" -SignOnMode "BASIC_AUTH" -Settings $Settings
            $NewObject.Label | Should -Be "New App"
            $NewObject.Name | Should -Be "template_basic_auth"
            $NewObject.SignOnMode | Should -Be "BASIC_AUTH"
            $NewObject.Settings.App.Url | Should -Be "https://example.com/login.html"
            $NewObject.Settings.App.AuthURL | Should -Be "https://example.com/auth.html"
        }
        
        It 'Test New-OktaApplication BasicAuthApplication' {

            $Content = '{"id":"0oa90v3f09cUtZfI11d7","name":"template_basic_auth","label":"New App","status":"ACTIVE","lastUpdated":"2023-07-20T19:38:13.000Z","created":"2023-07-20T19:38:12.000Z","accessibility":{"selfService":false,"errorRedirectUrl":null,"loginRedirectUrl":null},"visibility":{"autoLaunch":false,"autoSubmitToolbar":false,"hide":{"iOS":false,"web":false},"appLinks":{"login":true}},"features":[],"signOnMode":"BASIC_AUTH","credentials":{"scheme":"EDIT_USERNAME_AND_PASSWORD","userNameTemplate":{"template":"${source.login}","type":"BUILT_IN"},"revealPassword":false,"signing":{}},"settings":{"app":{"loginUrlRegex":null,"authURL":"https://example.com/auth.html","url":"https://example.com/login.html"},"notifications":{"vpn":{"network":{"connection":"DISABLED"},"message":null,"helpUrl":null}},"manualProvisioning":false,"implicitAssignment":false,"notes":{"admin":null,"enduser":null}},"_links":{"uploadLogo":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/logo","hints":{"allow":["POST"]}},"appLinks":[{"name":"login","href":"https://testorg.com/home/template_basic_auth/0oa90v3f09cUtZfI11d7/2873","type":"text/html"}],"profileEnrollment":{"href":"https://testorg.com/api/v1/policies/rst1fddpitF6oUuZA1d7"},"policies":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/policies","hints":{"allow":["PUT"]}},"groups":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/groups"},"logo":[{"name":"medium","href":"https://op3static.oktacdn.com/assets/img/logos/default.6770228fb0dab49a1695ef440a5279bb.png","type":"image/png"}],"accessPolicy":{"href":"https://testorg.com/api/v1/policies/rst1fddpir2HgIar61d7"},"users":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/users"},"deactivate":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/lifecycle/deactivate"}}}' | ConvertFrom-Json

            $Response = @{
                Response   = $Content
                StatusCode = 200
                Headers = @{ "Content-Type" = @("application/json")}
            }

            Mock -ModuleName Okta.PowerShell Invoke-OktaApiClient { return $Response } -Verifiable

            $Settings = Initialize-OktaBasicApplicationSettings -App @{ Url = "https://example.com/login.html"; AuthURL = "https://example.com/auth.html" }
            $NewObject = Initialize-OktaBasicAuthApplication -Label "New App" -SignOnMode "BASIC_AUTH" -Settings $Settings
            
            $TestResult = New-OktaApplication -Application $NewObject 

            Assert-MockCalled -ModuleName Okta.PowerShell Invoke-OktaApiClient -Times 1

            $TestResult.Id | Should -Be 0oa90v3f09cUtZfI11d7
            $TestResult.Label | Should -Be "New App"
            $TestResult.Name | Should -Be "template_basic_auth"
            $TestResult.SignOnMode | Should -Be "BASIC_AUTH"
            $TestResult.Settings.App.Url | Should -Be "https://example.com/login.html"
            $TestResult.Settings.App.AuthURL | Should -Be "https://example.com/auth.html"
            $TestResult.Status | Should -Be "ACTIVE"
        }

        It 'Initialize-OktaBookmarkApplication' {
            # a simple test to create an object
            $Settings = Initialize-OktaBookmarkApplicationSettings -App @{ Url = "https://example.com/bookmark.htm"; RequestIntegration = $False }

            $Settings.App.Url | Should -Be "https://example.com/bookmark.htm"
            $Settings.App.RequestIntegration | Should -Be $False

            $NewObject = Initialize-OktaBookmarkApplication -Label "New App" -SignOnMode "BOOKMARK" -Settings $Settings
            $NewObject.Label | Should -Be "New App"
            $NewObject.Name | Should -Be "bookmark"
            $NewObject.SignOnMode | Should -Be "BOOKMARK"
            $NewObject.Settings.App.Url | Should -Be "https://example.com/bookmark.htm"
            $NewObject.Settings.App.RequestIntegration | Should -Be $False
        }

        It 'Test New-OktaApplication BookmarkApplication' {

            $Content = '{"id":"0oa93ehgmd33pwOu51d7","name":"bookmark","label":"New App","status":"ACTIVE","lastUpdated":"2023-07-24T14:33:38.000Z","created":"2023-07-24T14:33:38.000Z","accessibility":{"selfService":false,"errorRedirectUrl":null,"loginRedirectUrl":null},"visibility":{"autoLaunch":false,"autoSubmitToolbar":false,"hide":{"iOS":false,"web":false},"appLinks":{"login":true}},"features":[],"signOnMode":"BOOKMARK","credentials":{"userNameTemplate":{"template":"${source.login}","type":"BUILT_IN"},"signing":{}},"settings":{"app":{"requestIntegration":false,"url":"https://example.com/bookmark.htm"},"notifications":{"vpn":{"network":{"connection":"DISABLED"},"message":null,"helpUrl":null}},"manualProvisioning":false,"implicitAssignment":false,"notes":{"admin":null,"enduser":null}},"_links":{"uploadLogo":{"href":"https://testorg.com/api/v1/apps/0oa93ehgmd33pwOu51d7/logo","hints":{"allow":["POST"]}},"appLinks":[{"name":"login","href":"https://testorg.com/home/bookmark/0oa93ehgmd33pwOu51d7/2557","type":"text/html"}],"profileEnrollment":{"href":"https://testorg.com/api/v1/policies/rst1fddpitF6oUuZA1d7"},"policies":{"href":"https://testorg.com/api/v1/apps/0oa93ehgmd33pwOu51d7/policies","hints":{"allow":["PUT"]}},"groups":{"href":"https://testorg.com/api/v1/apps/0oa93ehgmd33pwOu51d7/groups"},"logo":[{"name":"medium","href":"https://op3static.oktacdn.com/assets/img/logos/bookmark-app.b81c03e2607468e5b5f9c9351c99313e.png","type":"image/png"}],"accessPolicy":{"href":"https://testorg.com/api/v1/policies/rst1fddpir2HgIar61d7"},"users":{"href":"https://testorg.com/api/v1/apps/0oa93ehgmd33pwOu51d7/users"},"deactivate":{"href":"https://testorg.com/api/v1/apps/0oa93ehgmd33pwOu51d7/lifecycle/deactivate"}}}' | ConvertFrom-Json

            $Response = @{
                Response   = $Content
                StatusCode = 200
                Headers = @{ "Content-Type" = @("application/json")}
            }

            Mock -ModuleName Okta.PowerShell Invoke-OktaApiClient { return $Response } -Verifiable

            $Settings = Initialize-OktaBookmarkApplicationSettings -App @{ Url = "https://example.com/bookmark.htm"; RequestIntegration = $False }
            $NewObject = Initialize-OktaBookmarkApplication -Label "New App" -SignOnMode "BOOKMARK" -Settings $Settings
            
            $TestResult = New-OktaApplication -Application $NewObject 

            Assert-MockCalled -ModuleName Okta.PowerShell Invoke-OktaApiClient -Times 1

            $TestResult.Id | Should -Be '0oa93ehgmd33pwOu51d7'
            $TestResult.Label | Should -Be "New App"
            $TestResult.Name | Should -Be "bookmark"
            $TestResult.SignOnMode | Should -Be "BOOKMARK"
            $TestResult.Settings.App.Url | Should -Be "https://example.com/bookmark.htm"
            $TestResult.Settings.App.RequestIntegration | Should -Be $False
            $TestResult.Status | Should -Be "ACTIVE"
        }

        It 'Test Initialize-OktaOpenIdConnectApplication' {
           
            $OAuthClient = [PSCustomObject]@{
                client_uri = "https://example.com/client"
                logo_uri = "https://example.com/assets/images/logo-new.png"
                response_types = @("token", "id_token", "code")
                redirect_uris = @("https://example.com/oauth2/callback", "myapp://callback")
                post_logout_redirect_uris = @("https://example.com/postlogout", "myapp://postlogoutcallback")
                grant_types = @("implicit", "authorization_code")
                application_type = "native"
                tos_uri = "https://example.com/client/tos"
                policy_uri = "https://example.com/client/policy"
            }
            # a simple test to create an object
            $Settings = Initialize-OktaOpenIdConnectApplicationSettings -OauthClient $OAuthClient

            $Settings.OauthClient.client_uri | Should -Be "https://example.com/client"
            $Settings.OauthClient.logo_uri | Should -Be "https://example.com/assets/images/logo-new.png"
            $Settings.OauthClient.redirect_uris.Count | Should -Be 2
            $Settings.OauthClient.post_logout_redirect_uris.Count | Should -Be 2
            $Settings.OauthClient.grant_types.Count | Should -Be 2
            $Settings.OauthClient.application_type | Should -Be "native"
            $Settings.OauthClient.tos_uri | Should -Be "https://example.com/client/tos"
            $Settings.OauthClient.policy_uri | Should -Be "https://example.com/client/policy"

            $NewObject = Initialize-OktaOpenIdConnectApplication -Label "New App" -SignOnMode "OPENID_CONNECT" -Settings $Settings
            $NewObject.Label | Should -Be "New App"
            $NewObject.Name | Should -Be "oidc_client"
            $NewObject.SignOnMode | Should -Be "OPENID_CONNECT"
            
            $NewObject.Settings.OauthClient.client_uri | Should -Be "https://example.com/client"
            $NewObject.Settings.OauthClient.logo_uri | Should -Be "https://example.com/assets/images/logo-new.png"
            $NewObject.Settings.OauthClient.redirect_uris.Count | Should -Be 2
            $NewObject.Settings.OauthClient.post_logout_redirect_uris.Count | Should -Be 2
            $NewObject.Settings.OauthClient.grant_types.Count | Should -Be 2
            $NewObject.Settings.OauthClient.application_type | Should -Be "native"
            $NewObject.Settings.oauthClient.tos_uri | Should -Be "https://example.com/client/tos"
            $NewObject.Settings.oauthClient.policy_uri | Should -Be "https://example.com/client/policy"
        }

        It 'Test New-OktaApplication OpenIdConnectApplication' {

            $Content = '{"id":"0oa91jmjzqVR7DLGD1d7","name":"oidc_client","label":"New App","status":"ACTIVE","lastUpdated":"2023-07-21T16:35:08.000Z","created":"2023-07-21T16:35:07.000Z","accessibility":{"selfService":false,"errorRedirectUrl":null,"loginRedirectUrl":null},"visibility":{"autoLaunch":false,"autoSubmitToolbar":false,"hide":{"iOS":true,"web":true},"appLinks":{"oidc_client_link":true}},"features":[],"signOnMode":"OPENID_CONNECT","credentials":{"userNameTemplate":{"template":"${source.login}","type":"BUILT_IN"},"signing":{"kid":"syExwWcnwaVzJzFiCAF5noLRJsteW9BA9sdKyh7a_4c"},"oauthClient":{"autoKeyRotation":true,"client_id":"AddOpenIdConnectApp_TestClientId","client_secret":"7VgHPmL93yoz1dvYcG5_p6UwbNGj0g-u8D-WIKgmgceGzbBPAqkcfOByPFTTrfHo","token_endpoint_auth_method":"client_secret_post","pkce_required":true}},"settings":{"app":{},"notifications":{"vpn":{"network":{"connection":"DISABLED"},"message":null,"helpUrl":null}},"manualProvisioning":false,"implicitAssignment":false,"notes":{"admin":null,"enduser":null},"oauthClient":{"client_uri":"https://example.com/client","logo_uri":"https://example.com/assets/images/logo-new.png","redirect_uris":["https://example.com/oauth2/callback","myapp://callback"],"post_logout_redirect_uris":["https://example.com/postlogout","myapp://postlogoutcallback"],"response_types":["token","id_token","code"],"grant_types":["implicit","authorization_code"],"jwks":{"keys":[{"kty":"RSA","id":"pks91k82r1Ky0r0Y91d7","status":"ACTIVE","kid":"SIGNING_KEY","use":null,"e":"AQAB","n":"MIIBIzANBgkqhkiG9w0BAQEFAAOCARAAMIIBCwKCAQIAnFo/4e91na8x/BsPkNS5QkwankewxJ1uZU6p827W/gkRcNHtNi/cE644W5OVdB4UaXV6koT+TsC1prhUEhRR3g5ggE0B/lwYqBaLq/Ejy19Crc4XYU3Aah67Y6HiHWcHGZ+BbpebtTixJv/UYW/Gw+k8M+zj4O001mOeBPpwlEiZZLIo33m/Xkfn28jaCFqTQBJHr67IQh4zEUFs4e5D5D6UE8ee93yeSUJyhbifeIgYh3tS/+ZW4Uo1KLIc0rcLRrnEMsS3aOQbrv/SEKij+Syx4KXI0Gi2xMdXctnFOVT6NM6/EkLxFp2POEdv9SNBtTvXcxIGRwK51W4Jdgh/xZcCAwEAAQ=="}]},"application_type":"native","tos_uri":"https://example.com/client/tos","policy_uri":"https://example.com/client/policy","consent_method":"TRUSTED","issuer_mode":"DYNAMIC","idp_initiated_login":{"mode":"DISABLED","default_scope":[]},"wildcard_redirect":"DISABLED"}},"_links":{"uploadLogo":{"href":"https://testorg.com/api/v1/apps/0oa91jmjzqVR7DLGD1d7/logo","hints":{"allow":["POST"]}},"appLinks":[{"name":"oidc_client_link","href":"https://testorg.com/home/oidc_client/0oa91jmjzqVR7DLGD1d7/aln177a159h7Zf52X0g8","type":"text/html"}],"profileEnrollment":{"href":"https://testorg.com/api/v1/policies/rst1fddpitF6oUuZA1d7"},"policies":{"href":"https://testorg.com/api/v1/apps/0oa91jmjzqVR7DLGD1d7/policies","hints":{"allow":["PUT"]}},"groups":{"href":"https://testorg.com/api/v1/apps/0oa91jmjzqVR7DLGD1d7/groups"},"logo":[{"name":"medium","href":"https://op3static.oktacdn.com/assets/img/logos/default.6770228fb0dab49a1695ef440a5279bb.png","type":"image/png"}],"clientCredentials":[{"name":"secrets","href":"https://testorg.com/api/v1/apps/0oa91jmjzqVR7DLGD1d7/credentials/secrets"}],"accessPolicy":{"href":"https://testorg.com/api/v1/policies/rst1fddpir2HgIar61d7"},"users":{"href":"https://testorg.com/api/v1/apps/0oa91jmjzqVR7DLGD1d7/users"},"deactivate":{"href":"https://testorg.com/api/v1/apps/0oa91jmjzqVR7DLGD1d7/lifecycle/deactivate"}}}' | ConvertFrom-Json

            $Response = @{
                Response   = $Content
                StatusCode = 200
                Headers = @{ "Content-Type" = @("application/json")}
            }

            Mock -ModuleName Okta.PowerShell Invoke-OktaApiClient { return $Response } -Verifiable

            $OAuthClient = [PSCustomObject]@{
                client_uri = "https://example.com/client"
                logo_uri = "https://example.com/assets/images/logo-new.png"
                response_types = @("token", "id_token", "code")
                redirect_uris = @("https://example.com/oauth2/callback", "myapp://callback")
                post_logout_redirect_uris = @("https://example.com/postlogout", "myapp://postlogoutcallback")
                grant_types = @("implicit", "authorization_code")
                application_type = "native"
                tos_uri = "https://example.com/client/tos"
                policy_uri = "https://example.com/client/policy"
            }
            # a simple test to create an object
            $Settings = Initialize-OktaOpenIdConnectApplicationSettings -OauthClient $OAuthClient
            
            $NewObject = Initialize-OktaOpenIdConnectApplication -Label "New App" -SignOnMode "OPENID_CONNECT" -Settings $Settings
            
            $TestResult = New-OktaApplication -Application $NewObject 

            Assert-MockCalled -ModuleName Okta.PowerShell Invoke-OktaApiClient -Times 1

            $TestResult.Id | Should -Be '0oa91jmjzqVR7DLGD1d7'
            $TestResult.Label | Should -Be "New App"
            $TestResult.Name | Should -Be "oidc_client"
            $TestResult.SignOnMode | Should -Be "OPENID_CONNECT"
            $TestResult.Status | Should -Be "ACTIVE"
            
            # TODO make Case consistent (i.e ClientUri) 
            $TestResult.Settings.OauthClient.client_uri | Should -Be "https://example.com/client"
            $TestResult.Settings.OauthClient.logo_uri | Should -Be "https://example.com/assets/images/logo-new.png"
            $TestResult.Settings.OauthClient.redirect_uris.Count | Should -Be 2
            $TestResult.Settings.OauthClient.post_logout_redirect_uris.Count | Should -Be 2
            $TestResult.Settings.OauthClient.grant_types.Count | Should -Be 2            
            $TestResult.Settings.OauthClient.idp_initiated_login | Should -Not -Be $null   
            $TestResult.Settings.OauthClient.application_type | Should -Be "native"     
            $TestResult.Settings.OauthClient.consent_method | Should -Be "trusted"  
            $TestResult.Settings.OauthClient.tos_uri | Should -Be "https://example.com/client/tos"            
        }
    }

    Context 'Get-OktaApplication' {
        It 'Test Get-OktaApplication' {
            $Content = '{"id":"0oa91jmjzqVR7DLGD1d7","name":"oidc_client","label":"New App","status":"ACTIVE","lastUpdated":"2023-07-21T16:35:08.000Z","created":"2023-07-21T16:35:07.000Z","accessibility":{"selfService":false,"errorRedirectUrl":null,"loginRedirectUrl":null},"visibility":{"autoLaunch":false,"autoSubmitToolbar":false,"hide":{"iOS":true,"web":true},"appLinks":{"oidc_client_link":true}},"features":[],"signOnMode":"OPENID_CONNECT","credentials":{"userNameTemplate":{"template":"${source.login}","type":"BUILT_IN"},"signing":{"kid":"syExwWcnwaVzJzFiCAF5noLRJsteW9BA9sdKyh7a_4c"},"oauthClient":{"autoKeyRotation":true,"client_id":"AddOpenIdConnectApp_TestClientId","client_secret":"7VgHPmL93yoz1dvYcG5_p6UwbNGj0g-u8D-WIKgmgceGzbBPAqkcfOByPFTTrfHo","token_endpoint_auth_method":"client_secret_post","pkce_required":true}},"settings":{"app":{},"notifications":{"vpn":{"network":{"connection":"DISABLED"},"message":null,"helpUrl":null}},"manualProvisioning":false,"implicitAssignment":false,"notes":{"admin":null,"enduser":null},"oauthClient":{"client_uri":"https://example.com/client","logo_uri":"https://example.com/assets/images/logo-new.png","redirect_uris":["https://example.com/oauth2/callback","myapp://callback"],"post_logout_redirect_uris":["https://example.com/postlogout","myapp://postlogoutcallback"],"response_types":["token","id_token","code"],"grant_types":["implicit","authorization_code"],"jwks":{"keys":[{"kty":"RSA","id":"pks91k82r1Ky0r0Y91d7","status":"ACTIVE","kid":"SIGNING_KEY","use":null,"e":"AQAB","n":"MIIBIzANBgkqhkiG9w0BAQEFAAOCARAAMIIBCwKCAQIAnFo/4e91na8x/BsPkNS5QkwankewxJ1uZU6p827W/gkRcNHtNi/cE644W5OVdB4UaXV6koT+TsC1prhUEhRR3g5ggE0B/lwYqBaLq/Ejy19Crc4XYU3Aah67Y6HiHWcHGZ+BbpebtTixJv/UYW/Gw+k8M+zj4O001mOeBPpwlEiZZLIo33m/Xkfn28jaCFqTQBJHr67IQh4zEUFs4e5D5D6UE8ee93yeSUJyhbifeIgYh3tS/+ZW4Uo1KLIc0rcLRrnEMsS3aOQbrv/SEKij+Syx4KXI0Gi2xMdXctnFOVT6NM6/EkLxFp2POEdv9SNBtTvXcxIGRwK51W4Jdgh/xZcCAwEAAQ=="}]},"application_type":"native","tos_uri":"https://example.com/client/tos","policy_uri":"https://example.com/client/policy","consent_method":"TRUSTED","issuer_mode":"DYNAMIC","idp_initiated_login":{"mode":"DISABLED","default_scope":[]},"wildcard_redirect":"DISABLED"}},"_links":{"uploadLogo":{"href":"https://testorg.com/api/v1/apps/0oa91jmjzqVR7DLGD1d7/logo","hints":{"allow":["POST"]}},"appLinks":[{"name":"oidc_client_link","href":"https://testorg.com/home/oidc_client/0oa91jmjzqVR7DLGD1d7/aln177a159h7Zf52X0g8","type":"text/html"}],"profileEnrollment":{"href":"https://testorg.com/api/v1/policies/rst1fddpitF6oUuZA1d7"},"policies":{"href":"https://testorg.com/api/v1/apps/0oa91jmjzqVR7DLGD1d7/policies","hints":{"allow":["PUT"]}},"groups":{"href":"https://testorg.com/api/v1/apps/0oa91jmjzqVR7DLGD1d7/groups"},"logo":[{"name":"medium","href":"https://op3static.oktacdn.com/assets/img/logos/default.6770228fb0dab49a1695ef440a5279bb.png","type":"image/png"}],"clientCredentials":[{"name":"secrets","href":"https://testorg.com/api/v1/apps/0oa91jmjzqVR7DLGD1d7/credentials/secrets"}],"accessPolicy":{"href":"https://testorg.com/api/v1/policies/rst1fddpir2HgIar61d7"},"users":{"href":"https://testorg.com/api/v1/apps/0oa91jmjzqVR7DLGD1d7/users"},"deactivate":{"href":"https://testorg.com/api/v1/apps/0oa91jmjzqVR7DLGD1d7/lifecycle/deactivate"}}}' | ConvertFrom-Json

            $Response = @{
                Response   = $Content
                StatusCode = 200
                Headers = @{ "Content-Type" = @("application/json")}
            }

            Mock -ModuleName Okta.PowerShell Invoke-OktaApiClient { return $Response } -Verifiable

            $TestResult = Get-OktaApplication -AppId "foo"

            Assert-MockCalled -ModuleName Okta.PowerShell Invoke-OktaApiClient -Times 1

            $TestResult.Id | Should -Be '0oa91jmjzqVR7DLGD1d7'
            $TestResult.Label | Should -Be "New App"
            $TestResult.Name | Should -Be "oidc_client"
            $TestResult.SignOnMode | Should -Be "OPENID_CONNECT"
            $TestResult.Status | Should -Be "ACTIVE"
            
            $TestResult.Settings.OauthClient.client_uri | Should -Be "https://example.com/client"
            $TestResult.Settings.OauthClient.logo_uri | Should -Be "https://example.com/assets/images/logo-new.png"
            $TestResult.Settings.OauthClient.redirect_uris.Count | Should -Be 2
            $TestResult.Settings.OauthClient.post_logout_redirect_uris.Count | Should -Be 2
            $TestResult.Settings.OauthClient.grant_types.Count | Should -Be 2            
            $TestResult.Settings.OauthClient.idp_initiated_login | Should -Not -Be $null   
            $TestResult.Settings.OauthClient.application_type | Should -Be "native"     
            $TestResult.Settings.OauthClient.consent_method | Should -Be "trusted"  
            $TestResult.Settings.OauthClient.tos_uri | Should -Be "https://example.com/client/tos"   

        }
    }

    Context 'Invoke-OktaListApplications' {
        It 'Test Invoke-OktaListApplications' {
            $Content = '[{"id":"0oa90v3f09cUtZfI11d7","name":"template_basic_auth","label":"New App","status":"ACTIVE","lastUpdated":"2023-07-20T19:38:13.000Z","created":"2023-07-20T19:38:12.000Z","accessibility":{"selfService":false,"errorRedirectUrl":null,"loginRedirectUrl":null},"visibility":{"autoLaunch":false,"autoSubmitToolbar":false,"hide":{"iOS":false,"web":false},"appLinks":{"login":true}},"features":[],"signOnMode":"BASIC_AUTH","credentials":{"scheme":"EDIT_USERNAME_AND_PASSWORD","userNameTemplate":{"template":"${source.login}","type":"BUILT_IN"},"revealPassword":false,"signing":{}},"settings":{"app":{"loginUrlRegex":null,"authURL":"https://example.com/auth.html","url":"https://example.com/login.html"},"notifications":{"vpn":{"network":{"connection":"DISABLED"},"message":null,"helpUrl":null}},"manualProvisioning":false,"implicitAssignment":false,"notes":{"admin":null,"enduser":null}},"_links":{"uploadLogo":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/logo","hints":{"allow":["POST"]}},"appLinks":[{"name":"login","href":"https://testorg.com/home/template_basic_auth/0oa90v3f09cUtZfI11d7/2873","type":"text/html"}],"profileEnrollment":{"href":"https://testorg.com/api/v1/policies/rst1fddpitF6oUuZA1d7"},"policies":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/policies","hints":{"allow":["PUT"]}},"groups":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/groups"},"logo":[{"name":"medium","href":"https://op3static.oktacdn.com/assets/img/logos/default.6770228fb0dab49a1695ef440a5279bb.png","type":"image/png"}],"accessPolicy":{"href":"https://testorg.com/api/v1/policies/rst1fddpir2HgIar61d7"},"users":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/users"},"deactivate":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/lifecycle/deactivate"}}}]' | ConvertFrom-Json

            $Response = @{
                Response   = $Content
                StatusCode = 200
                Headers = @{ "Content-Type" = @("application/json")}
            }

            Mock -ModuleName Okta.PowerShell Invoke-OktaApiClient { return $Response } -Verifiable

            $TestResult = Invoke-OktaListApplications 

            Assert-MockCalled -ModuleName Okta.PowerShell Invoke-OktaApiClient -Times 1

            $TestResult.Count | Should -Be 1
            $TestResult[0].Id | Should -Be 0oa90v3f09cUtZfI11d7
            $TestResult[0].Label | Should -Be "New App"
            $TestResult[0].Name | Should -Be "template_basic_auth"
            $TestResult[0].SignOnMode | Should -Be "BASIC_AUTH"
            $TestResult[0].Settings.App.Url | Should -Be "https://example.com/login.html"
            $TestResult[0].Settings.App.AuthURL | Should -Be "https://example.com/auth.html"
            $TestResult[0].Status | Should -Be "ACTIVE"
        }
    }

    Context 'Invoke-OktaListWithApplicationsPaging' {
        It 'Test Invoke-OktaListApplications with next page in header' {
            $Content = '[{"id":"0oa90v3f09cUtZfI11d7","name":"template_basic_auth","label":"New App","status":"ACTIVE","lastUpdated":"2023-07-20T19:38:13.000Z","created":"2023-07-20T19:38:12.000Z","accessibility":{"selfService":false,"errorRedirectUrl":null,"loginRedirectUrl":null},"visibility":{"autoLaunch":false,"autoSubmitToolbar":false,"hide":{"iOS":false,"web":false},"appLinks":{"login":true}},"features":[],"signOnMode":"BASIC_AUTH","credentials":{"scheme":"EDIT_USERNAME_AND_PASSWORD","userNameTemplate":{"template":"${source.login}","type":"BUILT_IN"},"revealPassword":false,"signing":{}},"settings":{"app":{"loginUrlRegex":null,"authURL":"https://example.com/auth.html","url":"https://example.com/login.html"},"notifications":{"vpn":{"network":{"connection":"DISABLED"},"message":null,"helpUrl":null}},"manualProvisioning":false,"implicitAssignment":false,"notes":{"admin":null,"enduser":null}},"_links":{"uploadLogo":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/logo","hints":{"allow":["POST"]}},"appLinks":[{"name":"login","href":"https://testorg.com/home/template_basic_auth/0oa90v3f09cUtZfI11d7/2873","type":"text/html"}],"profileEnrollment":{"href":"https://testorg.com/api/v1/policies/rst1fddpitF6oUuZA1d7"},"policies":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/policies","hints":{"allow":["PUT"]}},"groups":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/groups"},"logo":[{"name":"medium","href":"https://op3static.oktacdn.com/assets/img/logos/default.6770228fb0dab49a1695ef440a5279bb.png","type":"image/png"}],"accessPolicy":{"href":"https://testorg.com/api/v1/policies/rst1fddpir2HgIar61d7"},"users":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/users"},"deactivate":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/lifecycle/deactivate"}}}]' | ConvertFrom-Json

            $Response = @{
                Response   = $Content
                StatusCode = 200
                Headers = @{ "Content-Type" = @("application/json")
                             "Link" = @("<https://myorg.oktapreview.com/api/v1/apps?after=0oa1fddpfxzYoj4ij1d7&limit=2>; rel=`"next`"")
                            }
            }

            Mock -ModuleName Okta.PowerShell Invoke-OktaApiClient { return $Response } -Verifiable

            $TestResult = Invoke-OktaListApplications -WithHttpInfo

            Assert-MockCalled -ModuleName Okta.PowerShell Invoke-OktaApiClient -Times 1

            
            $TestResult.NextPageUri | Should -Be "https://myorg.oktapreview.com/api/v1/apps?after=0oa1fddpfxzYoj4ij1d7&limit=2"

            $TestResult.Response.Count | Should -Be 1
            $TestResult.Response[0].Id | Should -Be 0oa90v3f09cUtZfI11d7
            $TestResult.Response[0].Name | Should -Be "template_basic_auth"
            $TestResult.Response[0].Label | Should -Be "New App"
            $TestResult.Response[0].SignOnMode | Should -Be "BASIC_AUTH"
            $TestResult.Response[0].Settings.App.Url | Should -Be "https://example.com/login.html"
            $TestResult.Response[0].Settings.App.AuthURL | Should -Be "https://example.com/auth.html"
            $TestResult.Response[0].Status | Should -Be "ACTIVE"
        }

        It 'Test Invoke-OktaListApplications with Uri' {
            $Content = '[{"id":"0oa90v3f09cUtZfI11d7","name":"template_basic_auth","label":"New App","status":"ACTIVE","lastUpdated":"2023-07-20T19:38:13.000Z","created":"2023-07-20T19:38:12.000Z","accessibility":{"selfService":false,"errorRedirectUrl":null,"loginRedirectUrl":null},"visibility":{"autoLaunch":false,"autoSubmitToolbar":false,"hide":{"iOS":false,"web":false},"appLinks":{"login":true}},"features":[],"signOnMode":"BASIC_AUTH","credentials":{"scheme":"EDIT_USERNAME_AND_PASSWORD","userNameTemplate":{"template":"${source.login}","type":"BUILT_IN"},"revealPassword":false,"signing":{}},"settings":{"app":{"loginUrlRegex":null,"authURL":"https://example.com/auth.html","url":"https://example.com/login.html"},"notifications":{"vpn":{"network":{"connection":"DISABLED"},"message":null,"helpUrl":null}},"manualProvisioning":false,"implicitAssignment":false,"notes":{"admin":null,"enduser":null}},"_links":{"uploadLogo":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/logo","hints":{"allow":["POST"]}},"appLinks":[{"name":"login","href":"https://testorg.com/home/template_basic_auth/0oa90v3f09cUtZfI11d7/2873","type":"text/html"}],"profileEnrollment":{"href":"https://testorg.com/api/v1/policies/rst1fddpitF6oUuZA1d7"},"policies":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/policies","hints":{"allow":["PUT"]}},"groups":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/groups"},"logo":[{"name":"medium","href":"https://op3static.oktacdn.com/assets/img/logos/default.6770228fb0dab49a1695ef440a5279bb.png","type":"image/png"}],"accessPolicy":{"href":"https://testorg.com/api/v1/policies/rst1fddpir2HgIar61d7"},"users":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/users"},"deactivate":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/lifecycle/deactivate"}}}]' | ConvertFrom-Json

            $Response = @{
                Response   = $Content
                StatusCode = 200
                Headers = @{ "Content-Type" = @("application/json")
                             "Link" = @("<https://myorg.oktapreview.com/api/v1/apps?after=bar&limit=2>; rel=`"next`"")
                            }
            }

            Mock -ModuleName Okta.PowerShell Invoke-OktaApiClient { return $Response } -Verifiable @PesterBoundParameters

            $TestResult = Invoke-OktaListApplications -Uri "https://myorg.oktapreview.com/api/v1/apps?after=foo&limit=2" -WithHttpInfo

            Assert-MockCalled -ModuleName Okta.PowerShell Invoke-OktaApiClient -Times 1 -Scope It -ParameterFilter { $Uri -eq  "/api/v1/apps" -and $QueryParameters["limit"] -eq 2 -and $QueryParameters["after"] -eq "foo" }

            $TestResult.NextPageUri | Should -Be "https://myorg.oktapreview.com/api/v1/apps?after=bar&limit=2"

            $TestResult.Response.Count | Should -Be 1
            $TestResult.Response[0].Id | Should -Be 0oa90v3f09cUtZfI11d7
            $TestResult.Response[0].Name | Should -Be "template_basic_auth"
            $TestResult.Response[0].Label | Should -Be "New App"
            $TestResult.Response[0].SignOnMode | Should -Be "BASIC_AUTH"
            $TestResult.Response[0].Settings.App.Url | Should -Be "https://example.com/login.html"
            $TestResult.Response[0].Settings.App.AuthURL | Should -Be "https://example.com/auth.html"
            $TestResult.Response[0].Status | Should -Be "ACTIVE"
        }

        It 'Test Invoke-OktaListApplications without next page in header' {
            $Content = '[{"id":"0oa90v3f09cUtZfI11d7","name":"template_basic_auth","label":"New App","status":"ACTIVE","lastUpdated":"2023-07-20T19:38:13.000Z","created":"2023-07-20T19:38:12.000Z","accessibility":{"selfService":false,"errorRedirectUrl":null,"loginRedirectUrl":null},"visibility":{"autoLaunch":false,"autoSubmitToolbar":false,"hide":{"iOS":false,"web":false},"appLinks":{"login":true}},"features":[],"signOnMode":"BASIC_AUTH","credentials":{"scheme":"EDIT_USERNAME_AND_PASSWORD","userNameTemplate":{"template":"${source.login}","type":"BUILT_IN"},"revealPassword":false,"signing":{}},"settings":{"app":{"loginUrlRegex":null,"authURL":"https://example.com/auth.html","url":"https://example.com/login.html"},"notifications":{"vpn":{"network":{"connection":"DISABLED"},"message":null,"helpUrl":null}},"manualProvisioning":false,"implicitAssignment":false,"notes":{"admin":null,"enduser":null}},"_links":{"uploadLogo":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/logo","hints":{"allow":["POST"]}},"appLinks":[{"name":"login","href":"https://testorg.com/home/template_basic_auth/0oa90v3f09cUtZfI11d7/2873","type":"text/html"}],"profileEnrollment":{"href":"https://testorg.com/api/v1/policies/rst1fddpitF6oUuZA1d7"},"policies":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/policies","hints":{"allow":["PUT"]}},"groups":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/groups"},"logo":[{"name":"medium","href":"https://op3static.oktacdn.com/assets/img/logos/default.6770228fb0dab49a1695ef440a5279bb.png","type":"image/png"}],"accessPolicy":{"href":"https://testorg.com/api/v1/policies/rst1fddpir2HgIar61d7"},"users":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/users"},"deactivate":{"href":"https://testorg.com/api/v1/apps/0oa90v3f09cUtZfI11d7/lifecycle/deactivate"}}}]' | ConvertFrom-Json

            $Response = @{
                Response   = $Content
                StatusCode = 200
                Headers = @{ "Content-Type" = @("application/json")
                             "Link" = @("<https://myorg.oktapreview.com/api/v1/apps?after=0oa1fddpfxzYoj4ij1d7&limit=2>; rel=`"self`"")
                            }
            }

            Mock -ModuleName Okta.PowerShell Invoke-OktaApiClient { return $Response } -Verifiable

            $TestResult = Invoke-OktaListApplications -WithHttpInfo

            Assert-MockCalled -ModuleName Okta.PowerShell Invoke-OktaApiClient -Times 1

            
            [string]::IsNullOrEmpty($TestResult.NextPageUri) | Should -Be $True

            $TestResult.Response.Count | Should -Be 1
            $TestResult.Response[0].Id | Should -Be 0oa90v3f09cUtZfI11d7
            $TestResult.Response[0].Name | Should -Be "template_basic_auth"
            $TestResult.Response[0].Label | Should -Be "New App"
            $TestResult.Response[0].SignOnMode | Should -Be "BASIC_AUTH"
            $TestResult.Response[0].Settings.App.Url | Should -Be "https://example.com/login.html"
            $TestResult.Response[0].Settings.App.AuthURL | Should -Be "https://example.com/auth.html"
            $TestResult.Response[0].Status | Should -Be "ACTIVE"
        }
    }


    Context 'Update-OktaApplication' {
        It 'Test Update-OktaApplication' {
            
            $Content = '{"id":"0oa93ehgmd33pwOu51d7","name":"bookmark","label":"New App","status":"ACTIVE","lastUpdated":"2023-07-24T14:33:38.000Z","created":"2023-07-24T14:33:38.000Z","accessibility":{"selfService":false,"errorRedirectUrl":null,"loginRedirectUrl":null},"visibility":{"autoLaunch":false,"autoSubmitToolbar":false,"hide":{"iOS":false,"web":false},"appLinks":{"login":true}},"features":[],"signOnMode":"BOOKMARK","credentials":{"userNameTemplate":{"template":"${source.login}","type":"BUILT_IN"},"signing":{}},"settings":{"app":{"requestIntegration":false,"url":"https://example.com/bookmark.htm"},"notifications":{"vpn":{"network":{"connection":"DISABLED"},"message":null,"helpUrl":null}},"manualProvisioning":false,"implicitAssignment":false,"notes":{"admin":null,"enduser":null}},"_links":{"uploadLogo":{"href":"https://testorg.com/api/v1/apps/0oa93ehgmd33pwOu51d7/logo","hints":{"allow":["POST"]}},"appLinks":[{"name":"login","href":"https://testorg.com/home/bookmark/0oa93ehgmd33pwOu51d7/2557","type":"text/html"}],"profileEnrollment":{"href":"https://testorg.com/api/v1/policies/rst1fddpitF6oUuZA1d7"},"policies":{"href":"https://testorg.com/api/v1/apps/0oa93ehgmd33pwOu51d7/policies","hints":{"allow":["PUT"]}},"groups":{"href":"https://testorg.com/api/v1/apps/0oa93ehgmd33pwOu51d7/groups"},"logo":[{"name":"medium","href":"https://op3static.oktacdn.com/assets/img/logos/bookmark-app.b81c03e2607468e5b5f9c9351c99313e.png","type":"image/png"}],"accessPolicy":{"href":"https://testorg.com/api/v1/policies/rst1fddpir2HgIar61d7"},"users":{"href":"https://testorg.com/api/v1/apps/0oa93ehgmd33pwOu51d7/users"},"deactivate":{"href":"https://testorg.com/api/v1/apps/0oa93ehgmd33pwOu51d7/lifecycle/deactivate"}}}' | ConvertFrom-Json

            $Response = @{
                Response   = $Content
                StatusCode = 200
                Headers = @{ "Content-Type" = @("application/json")}
            }

            Mock -ModuleName Okta.PowerShell Invoke-OktaApiClient { return $Response } -Verifiable
            $App = Initialize-OktaOpenIdConnectApplication -Label "New App" -SignOnMode "OPENID_CONNECT"
            $TestResult = Update-OktaApplication -Application $App -AppId "foo" 

            Assert-MockCalled -ModuleName Okta.PowerShell Invoke-OktaApiClient -Times 1

            $TestResult.Id | Should -Be '0oa93ehgmd33pwOu51d7'
            $TestResult.Label | Should -Be "New App"
            $TestResult.Name | Should -Be "bookmark"
            $TestResult.SignOnMode | Should -Be "BOOKMARK"
            $TestResult.Settings.App.Url | Should -Be "https://example.com/bookmark.htm"
            $TestResult.Settings.App.RequestIntegration | Should -Be $False
            $TestResult.Status | Should -Be "ACTIVE"
        }
    }
}
